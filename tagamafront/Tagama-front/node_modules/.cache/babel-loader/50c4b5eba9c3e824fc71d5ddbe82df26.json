{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\JovanaFiles\\\\UniVienna\\\\WinterSemester2020\\\\PRAKTIKUM\\\\tagamafront\\\\Tagama-front\\\\src\\\\app\\\\module\\\\dashboard\\\\dashboard.container.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Paper } from '@material-ui/core';\nimport { Bar, BarChart, CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { getAppHealth } from './dashboard.actions';\nimport format from \"date-fns/format\";\nimport { handleLogout, hasAnyRole, refreshToken } from '../../shared/app.properties';\nimport Redirect from 'react-router-dom/Redirect';\n\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [{\n        name: '1/1/2019',\n        Requests: 12\n      }, {\n        name: '1/2/2019',\n        Requests: 2\n      }]\n    };\n    this.unauthorized = false;\n  }\n\n  componentWillMount() {\n    this.unauthorized = !hasAnyRole('ROLE_USER,ROLE_ADMINISTRATION'); // let refreshTime = new Date();\n    // refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\n    // if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\n    //     handleLogout()\n    // } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\n    //     handleLogout()\n    // } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\n    //     refreshToken()\n    // }\n  }\n\n  componentDidMount() {\n    this.props.getAppHealth();\n  }\n\n  prepareDataHealth() {\n    if (this.props.reportHealth.data != undefined) {\n      var reportHealth = this.props.reportHealth.data[\"diskSpace\"];\n      var data = [{\n        name: \"Total\",\n        GB: Math.round(reportHealth[\"total\"] / (1024 * 1024 * 1024) * 10) / 10\n      }, {\n        name: \"Used\",\n        GB: Math.round((reportHealth[\"total\"] - reportHealth[\"free\"]) / (1024 * 1024 * 1024) * 10) / 10\n      }, {\n        name: \"Free\",\n        GB: Math.round(reportHealth[\"free\"] / (1024 * 1024 * 1024) * 10) / 10\n      }, {\n        name: \"Threshold\",\n        GB: reportHealth[\"threshold\"] / (1024 * 1024 * 1024)\n      }];\n      return data;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, localStorage.getItem('idm') && localStorage.getItem('me') && this.unauthorized && /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/app/error/unauthorized\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      md: 6,\n      className: \"formGrid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      style: {\n        marginLeft: 30 + \"px\",\n        marginRight: 15 + 'px',\n        padding: 10 + 'px',\n        width: '94%',\n        height: '360px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, \"Disk Space\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"95%\",\n      height: \"80%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(BarChart, {\n      data: this.prepareDataHealth() && this.prepareDataHealth(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"GB\",\n      fill: \"#8884d8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 37\n      }\n    })))))));\n  }\n\n}\n\nvar mapStateToProps = state => {\n  return {\n    reportHealth: state.dashboardReducer.reportHealth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAppHealth\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/Dell/Desktop/JovanaFiles/UniVienna/WinterSemester2020/PRAKTIKUM/tagamafront/Tagama-front/src/app/module/dashboard/dashboard.container.js"],"names":["React","connect","Grid","Paper","Bar","BarChart","CartesianGrid","Legend","Line","LineChart","ResponsiveContainer","Tooltip","XAxis","YAxis","getAppHealth","format","handleLogout","hasAnyRole","refreshToken","Redirect","Dashboard","Component","state","data","name","Requests","unauthorized","componentWillMount","componentDidMount","props","prepareDataHealth","reportHealth","undefined","GB","Math","round","render","localStorage","getItem","marginLeft","marginRight","padding","width","height","mapStateToProps","dashboardReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,mBAA1B;AACA,SACIC,GADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,MAJJ,EAKIC,IALJ,EAMIC,SANJ,EAOIC,mBAPJ,EAQIC,OARJ,EASIC,KATJ,EAUIC,KAVJ,QAWO,UAXP;AAYA,SAAQC,YAAR,QAA2B,qBAA3B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,YAAR,EAAsBC,UAAtB,EAAkCC,YAAlC,QAAqD,6BAArD;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,MAAMC,SAAN,SAAwBpB,KAAK,CAACqB,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAGpCC,KAHoC,GAG5B;AACJC,MAAAA,IAAI,EAAE,CACF;AAACC,QAAAA,IAAI,EAAE,UAAP;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OADE,EAEF;AAACD,QAAAA,IAAI,EAAE,UAAP;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAFE;AADF,KAH4B;AAAA,SAWpCC,YAXoC,GAWrB,KAXqB;AAAA;;AAapCC,EAAAA,kBAAkB,GAAG;AACjB,SAAKD,YAAL,GAAoB,CAACT,UAAU,CAAC,+BAAD,CAA/B,CADiB,CAGjB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDW,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWf,YAAX;AAEH;;AAEDgB,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKD,KAAL,CAAWE,YAAX,CAAwBR,IAAxB,IAAgCS,SAApC,EAA+C;AAC3C,UAAID,YAAY,GAAG,KAAKF,KAAL,CAAWE,YAAX,CAAwBR,IAAxB,CAA6B,WAA7B,CAAnB;AACA,UAAIA,IAAI,GAAG,CACP;AAACC,QAAAA,IAAI,EAAE,OAAP;AAAgBS,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAYJ,YAAY,CAAC,OAAD,CAAZ,IAAyB,OAAO,IAAP,GAAc,IAAvC,CAAD,GAAiD,EAA5D,IAAkE;AAAtF,OADO,EAEP;AACIP,QAAAA,IAAI,EAAE,MADV;AAEIS,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAW,CAACJ,YAAY,CAAC,OAAD,CAAZ,GAAwBA,YAAY,CAAC,MAAD,CAArC,KAAkD,OAAO,IAAP,GAAc,IAAhE,IAAwE,EAAnF,IAAyF;AAFjG,OAFO,EAMP;AAACP,QAAAA,IAAI,EAAE,MAAP;AAAeS,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAYJ,YAAY,CAAC,MAAD,CAAZ,IAAwB,OAAO,IAAP,GAAc,IAAtC,CAAD,GAAgD,EAA3D,IAAiE;AAApF,OANO,EAQP;AAACP,QAAAA,IAAI,EAAE,WAAP;AAAoBS,QAAAA,EAAE,EAAEF,YAAY,CAAC,WAAD,CAAZ,IAA6B,OAAO,IAAP,GAAc,IAA3C;AAAxB,OARO,CAAX;AAYA,aAAOR,IAAP;AACH;AAEJ;;AAGDa,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,YAAY,CAACC,OAAb,CAAqB,KAArB,KAA+BD,YAAY,CAACC,OAAb,CAAqB,IAArB,CAA/B,IAA6D,KAAKZ,YAAlE,iBACD,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAII,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAa,MAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AACVa,QAAAA,UAAU,EAAE,KAAK,IADP;AAEVC,QAAAA,WAAW,EAAE,KAAK,IAFR;AAGVC,QAAAA,OAAO,EAAE,KAAK,IAHJ;AAIVC,QAAAA,KAAK,EAAE,KAJG;AAKVC,QAAAA,MAAM,EAAE;AALE,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI,oBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC,KAA3B;AAAiC,MAAA,MAAM,EAAC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAE,KAAKb,iBAAL,MAA4B,KAAKA,iBAAL,EADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,aAAD;AAAe,MAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAMI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAOI,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAC,IAAb;AAAkB,MAAA,IAAI,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,CARJ,CADJ,CADJ,CAJJ,CADJ;AAkCH;;AAzFmC;;AA6FxC,IAAMc,eAAe,GAAGtB,KAAK,IAAI;AAC7B,SAAO;AACHS,IAAAA,YAAY,EAAET,KAAK,CAACuB,gBAAN,CAAuBd;AADlC,GAAP;AAGH,CAJD;;AAMA,eAAe9B,OAAO,CAAC2C,eAAD,EAAmB;AACpC9B,EAAAA;AADoC,CAAnB,CAAP,CAEXM,SAFW,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {Grid, Paper} from '@material-ui/core';\r\nimport {\r\n    Bar,\r\n    BarChart,\r\n    CartesianGrid,\r\n    Legend,\r\n    Line,\r\n    LineChart,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis\r\n} from 'recharts';\r\nimport {getAppHealth} from './dashboard.actions';\r\nimport format from \"date-fns/format\";\r\nimport {handleLogout, hasAnyRole, refreshToken} from '../../shared/app.properties';\r\nimport Redirect from 'react-router-dom/Redirect';\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n\r\n    state = {\r\n        data: [\r\n            {name: '1/1/2019', Requests: 12},\r\n            {name: '1/2/2019', Requests: 2}\r\n        ],\r\n\r\n    }\r\n\r\n    unauthorized = false;\r\n\r\n    componentWillMount() {\r\n        this.unauthorized = !hasAnyRole('ROLE_USER,ROLE_ADMINISTRATION');\r\n\r\n        // let refreshTime = new Date();\r\n        // refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n        // if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n        //     handleLogout()\r\n        // } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n        //     handleLogout()\r\n        // } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\r\n        //     refreshToken()\r\n        // }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAppHealth();\r\n\r\n    }\r\n\r\n    prepareDataHealth() {\r\n        if (this.props.reportHealth.data != undefined) {\r\n            var reportHealth = this.props.reportHealth.data[\"diskSpace\"];\r\n            var data = [\r\n                {name: \"Total\", GB: Math.round((reportHealth[\"total\"] / (1024 * 1024 * 1024)) * 10) / 10},\r\n                {\r\n                    name: \"Used\",\r\n                    GB: Math.round((reportHealth[\"total\"] - reportHealth[\"free\"]) / (1024 * 1024 * 1024) * 10) / 10\r\n                },\r\n                {name: \"Free\", GB: Math.round((reportHealth[\"free\"] / (1024 * 1024 * 1024)) * 10) / 10},\r\n\r\n                {name: \"Threshold\", GB: reportHealth[\"threshold\"] / (1024 * 1024 * 1024)}\r\n\r\n\r\n            ];\r\n            return data;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\">\r\n                {localStorage.getItem('idm') && localStorage.getItem('me') && this.unauthorized &&\r\n                <Redirect to=\"/app/error/unauthorized\"/>\r\n                }\r\n                <Grid container spacing={0}>\r\n                    <Grid md={6} className=\"formGrid\">\r\n                        <Paper style={{\r\n                            marginLeft: 30 + \"px\",\r\n                            marginRight: 15 + 'px',\r\n                            padding: 10 + 'px',\r\n                            width: '94%',\r\n                            height: '360px'\r\n                        }}>\r\n                            <h4>Disk Space</h4>\r\n                            <ResponsiveContainer width=\"95%\" height=\"80%\">\r\n                                <BarChart\r\n                                    data={this.prepareDataHealth() && this.prepareDataHealth()}>\r\n                                    <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                                    <XAxis dataKey=\"name\"/>\r\n                                    <YAxis/>\r\n                                    <Tooltip/>\r\n                                    <Legend/>\r\n                                    <Bar dataKey=\"GB\" fill=\"#8884d8\"/>\r\n                            </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reportHealth: state.dashboardReducer.reportHealth,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n     getAppHealth\r\n}))(Dashboard);"]},"metadata":{},"sourceType":"module"}