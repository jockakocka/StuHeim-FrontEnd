{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Dell/Desktop/JovanaFiles/UniVienna/WinterSemester2020/PRAKTIKUM/tagamafront/Tagama-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(dashboardSagas);\n\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { CREATE_REPORT_REQUEST, CREATE_REPORT_SUCCESS, GET_APP_HEALTH_REQUEST, GET_APP_HEALTH_SUCCESS, GET_QUEUE_REPORT_REQUEST, GET_QUEUE_REPORT_SUCCESS } from './dashboard.actions';\nimport { getAppHealth } from './dashboard.repo';\nexport function dashboardSagas() {\n  return _regeneratorRuntime.wrap(function dashboardSagas$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(GET_APP_HEALTH_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee(action) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return call(getAppHealth, action.payload);\n\n                  case 3:\n                    res = _context.sent;\n                    _context.next = 6;\n                    return put({\n                      type: GET_APP_HEALTH_SUCCESS,\n                      payload: res\n                    });\n\n                  case 6:\n                    _context.next = 10;\n                    break;\n\n                  case 8:\n                    _context.prev = 8;\n                    _context.t0 = _context[\"catch\"](0);\n\n                  case 10:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[0, 8]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:/Users/Dell/Desktop/JovanaFiles/UniVienna/WinterSemester2020/PRAKTIKUM/tagamafront/Tagama-front/src/app/module/dashboard/dashboard.saga.js"],"names":["dashboardSagas","call","put","takeEvery","CREATE_REPORT_REQUEST","CREATE_REPORT_SUCCESS","GET_APP_HEALTH_REQUEST","GET_APP_HEALTH_SUCCESS","GET_QUEUE_REPORT_REQUEST","GET_QUEUE_REPORT_SUCCESS","getAppHealth","action","payload","res","type"],"mappings":";;oDAWiBA,c;;AAXjB,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,SAAnB,QAAmC,oBAAnC;AACA,SACIC,qBADJ,EAEIC,qBAFJ,EAGIC,sBAHJ,EAIIC,sBAJJ,EAKIC,wBALJ,EAMIC,wBANJ,QAOO,qBAPP;AAQA,SAAQC,YAAR,QAA2B,kBAA3B;AAEA,OAAO,SAAUV,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAMG,SAAS,CAACG,sBAAD,wCAAyB,iBAAWK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEpB,2BAAMV,IAAI,CAACS,YAAD,EAAeC,MAAM,CAACC,OAAtB,CAAV;;AAFoB;AAE1BC,oBAAAA,GAF0B;AAAA;AAGhC,2BAAMX,GAAG,CAAC;AAACY,sBAAAA,IAAI,EAAEP,sBAAP;AAA+BK,sBAAAA,OAAO,EAAEC;AAAxC,qBAAD,CAAT;;AAHgC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAzB,EAAf;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {call, put, takeEvery} from 'redux-saga/effects';\r\nimport {\r\n    CREATE_REPORT_REQUEST,\r\n    CREATE_REPORT_SUCCESS,\r\n    GET_APP_HEALTH_REQUEST,\r\n    GET_APP_HEALTH_SUCCESS,\r\n    GET_QUEUE_REPORT_REQUEST,\r\n    GET_QUEUE_REPORT_SUCCESS\r\n} from './dashboard.actions'\r\nimport {getAppHealth} from './dashboard.repo';\r\n\r\nexport function* dashboardSagas() {\r\n\r\n    yield takeEvery(GET_APP_HEALTH_REQUEST, function* (action) {\r\n        try {\r\n            const res = yield call(getAppHealth, action.payload);\r\n            yield put({type: GET_APP_HEALTH_SUCCESS, payload: res});\r\n        } catch (e) {\r\n        }\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}