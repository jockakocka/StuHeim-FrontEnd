{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Dell/Desktop/JovanaFiles/UniVienna/WinterSemester2020/PRAKTIKUM/tagamafront/Tagama-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(privilegesSagas);\n\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { ADD_GROUP_PRIVILEGE_FAIL, ADD_GROUP_PRIVILEGE_REQUEST, ADD_GROUP_PRIVILEGE_SUCCESS, ADD_USER_PRIVILEGE_FAIL, ADD_USER_PRIVILEGE_REQUEST, ADD_USER_PRIVILEGE_SUCCESS, GET_ALL_GROUPS_BY_PRIVILEGE_FAIL, GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST, GET_ALL_GROUPS_BY_PRIVILEGE_SUCCESS, GET_ALL_PRIVILEGES_FAIL, GET_ALL_PRIVILEGES_REQUEST, GET_ALL_PRIVILEGES_SUCCESS, GET_ALL_USERS_BY_PRIVILEGE_FAIL, GET_ALL_USERS_BY_PRIVILEGE_REQUEST, GET_ALL_USERS_BY_PRIVILEGE_SUCCESS, GET_GROUPS_FILTERED_BY_NAME_REQUEST, GET_GROUPS_FILTERED_BY_NAME_SUCCESS, GET_USERS_FILTERED_BY_NAME_REQUEST, GET_USERS_FILTERED_BY_NAME_SUCCESS, REMOVE_GROUP_PRIVILEGE_FAIL, REMOVE_GROUP_PRIVILEGE_REQUEST, REMOVE_GROUP_PRIVILEGE_SUCCESS, REMOVE_USER_PRIVILEGE_FAIL, REMOVE_USER_PRIVILEGE_REQUEST, REMOVE_USER_PRIVILEGE_SUCCESS } from './privileges.actions';\nimport { addPrivilegeToGroup, addPrivilegeToUser, fetchAllGroupsByPrivilege, fetchAllPrivileges, fetchAllUsersByPrivilege, removePrivilegeFromGroup, removePrivilegeFromUser } from './privileges.repo';\nimport { fetchUsersFilteredByUsername } from '../users/users.repo';\nimport { fetchGroupsFilteredByName } from '../groups/groups.repo';\nexport function privilegesSagas() {\n  return _regeneratorRuntime.wrap(function privilegesSagas$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(GET_ALL_PRIVILEGES_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee(action) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return call(fetchAllPrivileges, action.payload);\n\n                  case 3:\n                    res = _context.sent;\n                    _context.next = 6;\n                    return put({\n                      type: GET_ALL_PRIVILEGES_SUCCESS,\n                      payload: res\n                    });\n\n                  case 6:\n                    _context.next = 13;\n                    break;\n\n                  case 8:\n                    _context.prev = 8;\n                    _context.t0 = _context[\"catch\"](0);\n                    console.error(_context.t0); //yield put(showNotification('error.error_nesto'));\n\n                    _context.next = 13;\n                    return put({\n                      type: GET_ALL_PRIVILEGES_FAIL,\n                      payload: {\n                        message: _context.t0.message\n                      }\n                    });\n\n                  case 13:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[0, 8]]);\n          }));\n\n        case 2:\n          _context10.next = 4;\n          return takeEvery(GET_ALL_USERS_BY_PRIVILEGE_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(action) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.prev = 0;\n                    _context2.next = 3;\n                    return call(fetchAllUsersByPrivilege, action.payload);\n\n                  case 3:\n                    res = _context2.sent;\n                    _context2.next = 6;\n                    return put({\n                      type: GET_ALL_USERS_BY_PRIVILEGE_SUCCESS,\n                      payload: res\n                    });\n\n                  case 6:\n                    _context2.next = 13;\n                    break;\n\n                  case 8:\n                    _context2.prev = 8;\n                    _context2.t0 = _context2[\"catch\"](0);\n                    console.error(_context2.t0); //yield put(showNotification('error.error_nesto'));\n\n                    _context2.next = 13;\n                    return put({\n                      type: GET_ALL_USERS_BY_PRIVILEGE_FAIL,\n                      payload: {\n                        message: _context2.t0.message\n                      }\n                    });\n\n                  case 13:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, null, [[0, 8]]);\n          }));\n\n        case 4:\n          _context10.next = 6;\n          return takeEvery(GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(action) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.prev = 0;\n                    _context3.next = 3;\n                    return call(fetchAllGroupsByPrivilege, action.payload);\n\n                  case 3:\n                    res = _context3.sent;\n                    _context3.next = 6;\n                    return put({\n                      type: GET_ALL_GROUPS_BY_PRIVILEGE_SUCCESS,\n                      payload: res\n                    });\n\n                  case 6:\n                    _context3.next = 13;\n                    break;\n\n                  case 8:\n                    _context3.prev = 8;\n                    _context3.t0 = _context3[\"catch\"](0);\n                    console.error(_context3.t0); //yield put(showNotification('error.error_nesto'));\n\n                    _context3.next = 13;\n                    return put({\n                      type: GET_ALL_GROUPS_BY_PRIVILEGE_FAIL,\n                      payload: {\n                        message: _context3.t0.message\n                      }\n                    });\n\n                  case 13:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3, null, [[0, 8]]);\n          }));\n\n        case 6:\n          _context10.next = 8;\n          return takeEvery(ADD_USER_PRIVILEGE_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(action) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.prev = 0;\n                    _context4.next = 3;\n                    return call(addPrivilegeToUser, action.payload);\n\n                  case 3:\n                    res = _context4.sent;\n                    _context4.next = 6;\n                    return put({\n                      type: ADD_USER_PRIVILEGE_SUCCESS,\n                      payload: res\n                    });\n\n                  case 6:\n                    _context4.next = 8;\n                    return put({\n                      type: GET_ALL_USERS_BY_PRIVILEGE_REQUEST,\n                      payload: {\n                        id: action.payload.privilege.id\n                      }\n                    });\n\n                  case 8:\n                    _context4.next = 15;\n                    break;\n\n                  case 10:\n                    _context4.prev = 10;\n                    _context4.t0 = _context4[\"catch\"](0);\n                    console.error(_context4.t0); //yield put(showNotification('error.error_nesto'));\n\n                    _context4.next = 15;\n                    return put({\n                      type: ADD_USER_PRIVILEGE_FAIL,\n                      payload: {\n                        message: _context4.t0.message\n                      }\n                    });\n\n                  case 15:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4, null, [[0, 10]]);\n          }));\n\n        case 8:\n          _context10.next = 10;\n          return takeEvery(REMOVE_USER_PRIVILEGE_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(action) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.prev = 0;\n                    _context5.next = 3;\n                    return call(removePrivilegeFromUser, action.payload);\n\n                  case 3:\n                    res = _context5.sent;\n                    _context5.next = 6;\n                    return put({\n                      type: REMOVE_USER_PRIVILEGE_SUCCESS,\n                      payload: res\n                    });\n\n                  case 6:\n                    _context5.next = 8;\n                    return put({\n                      type: GET_ALL_USERS_BY_PRIVILEGE_REQUEST,\n                      payload: action.payload.privilege\n                    });\n\n                  case 8:\n                    _context5.next = 15;\n                    break;\n\n                  case 10:\n                    _context5.prev = 10;\n                    _context5.t0 = _context5[\"catch\"](0);\n                    console.error(_context5.t0); //yield put(showNotification('error.error_nesto'));\n\n                    _context5.next = 15;\n                    return put({\n                      type: REMOVE_USER_PRIVILEGE_FAIL,\n                      payload: {\n                        message: _context5.t0.message\n                      }\n                    });\n\n                  case 15:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5, null, [[0, 10]]);\n          }));\n\n        case 10:\n          _context10.next = 12;\n          return takeEvery(ADD_GROUP_PRIVILEGE_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(action) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.prev = 0;\n                    _context6.next = 3;\n                    return call(addPrivilegeToGroup, action.payload);\n\n                  case 3:\n                    res = _context6.sent;\n                    _context6.next = 6;\n                    return put({\n                      type: ADD_GROUP_PRIVILEGE_SUCCESS,\n                      payload: res\n                    });\n\n                  case 6:\n                    _context6.next = 8;\n                    return put({\n                      type: GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST,\n                      payload: {\n                        id: action.payload.privilege.id\n                      }\n                    });\n\n                  case 8:\n                    _context6.next = 15;\n                    break;\n\n                  case 10:\n                    _context6.prev = 10;\n                    _context6.t0 = _context6[\"catch\"](0);\n                    console.error(_context6.t0); //yield put(showNotification('error.error_nesto'));\n\n                    _context6.next = 15;\n                    return put({\n                      type: ADD_GROUP_PRIVILEGE_FAIL,\n                      payload: {\n                        message: _context6.t0.message\n                      }\n                    });\n\n                  case 15:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, _callee6, null, [[0, 10]]);\n          }));\n\n        case 12:\n          _context10.next = 14;\n          return takeEvery(REMOVE_GROUP_PRIVILEGE_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(action) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.prev = 0;\n                    _context7.next = 3;\n                    return call(removePrivilegeFromGroup, action.payload);\n\n                  case 3:\n                    res = _context7.sent;\n                    _context7.next = 6;\n                    return put({\n                      type: REMOVE_GROUP_PRIVILEGE_SUCCESS,\n                      payload: res\n                    });\n\n                  case 6:\n                    _context7.next = 8;\n                    return put({\n                      type: GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST,\n                      payload: action.payload.privilege\n                    });\n\n                  case 8:\n                    _context7.next = 15;\n                    break;\n\n                  case 10:\n                    _context7.prev = 10;\n                    _context7.t0 = _context7[\"catch\"](0);\n                    console.error(_context7.t0); //yield put(showNotification('error.error_nesto'));\n\n                    _context7.next = 15;\n                    return put({\n                      type: REMOVE_GROUP_PRIVILEGE_FAIL,\n                      payload: {\n                        message: _context7.t0.message\n                      }\n                    });\n\n                  case 15:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _callee7, null, [[0, 10]]);\n          }));\n\n        case 14:\n          _context10.next = 16;\n          return takeEvery(GET_USERS_FILTERED_BY_NAME_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(action) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n              while (1) {\n                switch (_context8.prev = _context8.next) {\n                  case 0:\n                    _context8.prev = 0;\n                    _context8.next = 3;\n                    return call(fetchUsersFilteredByUsername, action.payload);\n\n                  case 3:\n                    res = _context8.sent;\n                    _context8.next = 6;\n                    return put({\n                      type: GET_USERS_FILTERED_BY_NAME_SUCCESS,\n                      payload: res\n                    });\n\n                  case 6:\n                    _context8.next = 11;\n                    break;\n\n                  case 8:\n                    _context8.prev = 8;\n                    _context8.t0 = _context8[\"catch\"](0);\n                    console.error(_context8.t0); //yield put(showNotification('error.error_nesto'));\n\n                  case 11:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }\n            }, _callee8, null, [[0, 8]]);\n          }));\n\n        case 16:\n          _context10.next = 18;\n          return takeEvery(GET_GROUPS_FILTERED_BY_NAME_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(action) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.prev = 0;\n                    _context9.next = 3;\n                    return call(fetchGroupsFilteredByName, action.payload);\n\n                  case 3:\n                    res = _context9.sent;\n                    _context9.next = 6;\n                    return put({\n                      type: GET_GROUPS_FILTERED_BY_NAME_SUCCESS,\n                      payload: res\n                    });\n\n                  case 6:\n                    _context9.next = 11;\n                    break;\n\n                  case 8:\n                    _context9.prev = 8;\n                    _context9.t0 = _context9[\"catch\"](0);\n                    console.error(_context9.t0); //yield put(showNotification('error.error_nesto'));\n\n                  case 11:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, _callee9, null, [[0, 8]]);\n          }));\n\n        case 18:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:/Users/Dell/Desktop/JovanaFiles/UniVienna/WinterSemester2020/PRAKTIKUM/tagamafront/Tagama-front/src/app/module/privileges/privileges.saga.js"],"names":["privilegesSagas","call","put","takeEvery","ADD_GROUP_PRIVILEGE_FAIL","ADD_GROUP_PRIVILEGE_REQUEST","ADD_GROUP_PRIVILEGE_SUCCESS","ADD_USER_PRIVILEGE_FAIL","ADD_USER_PRIVILEGE_REQUEST","ADD_USER_PRIVILEGE_SUCCESS","GET_ALL_GROUPS_BY_PRIVILEGE_FAIL","GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST","GET_ALL_GROUPS_BY_PRIVILEGE_SUCCESS","GET_ALL_PRIVILEGES_FAIL","GET_ALL_PRIVILEGES_REQUEST","GET_ALL_PRIVILEGES_SUCCESS","GET_ALL_USERS_BY_PRIVILEGE_FAIL","GET_ALL_USERS_BY_PRIVILEGE_REQUEST","GET_ALL_USERS_BY_PRIVILEGE_SUCCESS","GET_GROUPS_FILTERED_BY_NAME_REQUEST","GET_GROUPS_FILTERED_BY_NAME_SUCCESS","GET_USERS_FILTERED_BY_NAME_REQUEST","GET_USERS_FILTERED_BY_NAME_SUCCESS","REMOVE_GROUP_PRIVILEGE_FAIL","REMOVE_GROUP_PRIVILEGE_REQUEST","REMOVE_GROUP_PRIVILEGE_SUCCESS","REMOVE_USER_PRIVILEGE_FAIL","REMOVE_USER_PRIVILEGE_REQUEST","REMOVE_USER_PRIVILEGE_SUCCESS","addPrivilegeToGroup","addPrivilegeToUser","fetchAllGroupsByPrivilege","fetchAllPrivileges","fetchAllUsersByPrivilege","removePrivilegeFromGroup","removePrivilegeFromUser","fetchUsersFilteredByUsername","fetchGroupsFilteredByName","action","payload","res","type","console","error","message","id","privilege"],"mappings":"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","sourcesContent":["import {call, put, takeEvery} from 'redux-saga/effects';\r\nimport {\r\n    ADD_GROUP_PRIVILEGE_FAIL,\r\n    ADD_GROUP_PRIVILEGE_REQUEST,\r\n    ADD_GROUP_PRIVILEGE_SUCCESS,\r\n    ADD_USER_PRIVILEGE_FAIL,\r\n    ADD_USER_PRIVILEGE_REQUEST,\r\n    ADD_USER_PRIVILEGE_SUCCESS,\r\n    GET_ALL_GROUPS_BY_PRIVILEGE_FAIL,\r\n    GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST,\r\n    GET_ALL_GROUPS_BY_PRIVILEGE_SUCCESS,\r\n    GET_ALL_PRIVILEGES_FAIL,\r\n    GET_ALL_PRIVILEGES_REQUEST,\r\n    GET_ALL_PRIVILEGES_SUCCESS,\r\n    GET_ALL_USERS_BY_PRIVILEGE_FAIL,\r\n    GET_ALL_USERS_BY_PRIVILEGE_REQUEST,\r\n    GET_ALL_USERS_BY_PRIVILEGE_SUCCESS,\r\n    GET_GROUPS_FILTERED_BY_NAME_REQUEST,\r\n    GET_GROUPS_FILTERED_BY_NAME_SUCCESS,\r\n    GET_USERS_FILTERED_BY_NAME_REQUEST,\r\n    GET_USERS_FILTERED_BY_NAME_SUCCESS,\r\n    REMOVE_GROUP_PRIVILEGE_FAIL,\r\n    REMOVE_GROUP_PRIVILEGE_REQUEST,\r\n    REMOVE_GROUP_PRIVILEGE_SUCCESS,\r\n    REMOVE_USER_PRIVILEGE_FAIL,\r\n    REMOVE_USER_PRIVILEGE_REQUEST,\r\n    REMOVE_USER_PRIVILEGE_SUCCESS\r\n} from './privileges.actions';\r\nimport {\r\n    addPrivilegeToGroup,\r\n    addPrivilegeToUser,\r\n    fetchAllGroupsByPrivilege,\r\n    fetchAllPrivileges,\r\n    fetchAllUsersByPrivilege,\r\n    removePrivilegeFromGroup,\r\n    removePrivilegeFromUser\r\n} from './privileges.repo';\r\nimport {fetchUsersFilteredByUsername} from '../users/users.repo';\r\nimport {fetchGroupsFilteredByName} from '../groups/groups.repo';\r\n\r\nexport function* privilegesSagas () {\r\n    \r\n    yield takeEvery(GET_ALL_PRIVILEGES_REQUEST, function* (action) {\r\n        try {\r\n            const res = yield call(fetchAllPrivileges,action.payload);\r\n            yield put({type: GET_ALL_PRIVILEGES_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: GET_ALL_PRIVILEGES_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    yield takeEvery(GET_ALL_USERS_BY_PRIVILEGE_REQUEST, function* (action) {\r\n        try {\r\n            const res = yield call(fetchAllUsersByPrivilege,action.payload);\r\n            yield put({type: GET_ALL_USERS_BY_PRIVILEGE_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: GET_ALL_USERS_BY_PRIVILEGE_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    yield takeEvery(GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST, function* (action) {\r\n        try {\r\n            const res = yield call(fetchAllGroupsByPrivilege,action.payload);\r\n            yield put({type: GET_ALL_GROUPS_BY_PRIVILEGE_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: GET_ALL_GROUPS_BY_PRIVILEGE_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    //add privilege to user\r\n    yield takeEvery(ADD_USER_PRIVILEGE_REQUEST, function* (action) {\r\n\r\n        try {\r\n            const res = yield call(addPrivilegeToUser,action.payload);\r\n            yield put({type: ADD_USER_PRIVILEGE_SUCCESS, payload: res});\r\n            yield put({type: GET_ALL_USERS_BY_PRIVILEGE_REQUEST, payload: {id: action.payload.privilege.id}});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: ADD_USER_PRIVILEGE_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    //remove privilege from user\r\n    yield takeEvery(REMOVE_USER_PRIVILEGE_REQUEST, function* (action) {\r\n            try {\r\n\r\n\r\n                const res = yield call(removePrivilegeFromUser,action.payload);\r\n                yield put({type: REMOVE_USER_PRIVILEGE_SUCCESS, payload: res});\r\n                yield put({type: GET_ALL_USERS_BY_PRIVILEGE_REQUEST, payload: action.payload.privilege});\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n                //yield put(showNotification('error.error_nesto'));\r\n                yield put({type: REMOVE_USER_PRIVILEGE_FAIL, payload: {message: e.message}});\r\n            }\r\n    });\r\n\r\n    //add privilege to group\r\n    yield takeEvery(ADD_GROUP_PRIVILEGE_REQUEST, function* (action) {\r\n\r\n        try {\r\n            const res = yield call(addPrivilegeToGroup,action.payload);\r\n            yield put({type: ADD_GROUP_PRIVILEGE_SUCCESS, payload: res});\r\n            yield put({type: GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST, payload: {id: action.payload.privilege.id}});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: ADD_GROUP_PRIVILEGE_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n\r\n        //remove privilege from group\r\n    yield takeEvery(REMOVE_GROUP_PRIVILEGE_REQUEST, function* (action) {\r\n            try {\r\n\r\n\r\n                const res = yield call(removePrivilegeFromGroup,action.payload);\r\n                yield put({type: REMOVE_GROUP_PRIVILEGE_SUCCESS, payload: res});\r\n                yield put({type: GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST, payload: action.payload.privilege});\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n                //yield put(showNotification('error.error_nesto'));\r\n                yield put({type: REMOVE_GROUP_PRIVILEGE_FAIL, payload: {message: e.message}});\r\n            }\r\n    });\r\n\r\n\r\n    //get users filtered\r\n    yield takeEvery(GET_USERS_FILTERED_BY_NAME_REQUEST, function* (action) {\r\n\r\n        try {\r\n                const res = yield call(fetchUsersFilteredByUsername,action.payload);\r\n                yield put({type: GET_USERS_FILTERED_BY_NAME_SUCCESS, payload: res});\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n                //yield put(showNotification('error.error_nesto'));\r\n            }\r\n    });\r\n\r\n    //get groups filtered\r\n    yield takeEvery(GET_GROUPS_FILTERED_BY_NAME_REQUEST, function* (action) {\r\n                try {\r\n                    const res = yield call(fetchGroupsFilteredByName,action.payload);\r\n                    yield put({type: GET_GROUPS_FILTERED_BY_NAME_SUCCESS, payload: res});\r\n                }\r\n                catch (e) {\r\n                    console.error(e);\r\n                    //yield put(showNotification('error.error_nesto'));\r\n                }\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}