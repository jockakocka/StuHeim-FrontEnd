{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Dell/Desktop/JovanaFiles/UniVienna/WinterSemester2020/PRAKTIKUM/tagamafront/Tagama-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(usersSagas);\n\nimport { call, put, select, takeEvery } from 'redux-saga/effects';\nimport { CLEAR_USER_REQUEST, CREATE_USER_FAIL, CREATE_USER_REQUEST, CREATE_USER_SUCCESS, DELETE_USER_FAIL, DELETE_USER_REQUEST, DELETE_USER_SUCCESS, GET_ALL_USERS_FAIL, GET_ALL_USERS_REQUEST, GET_ALL_USERS_SUCCESS, GET_USER_FAIL, GET_USER_REQUEST, GET_USER_SUCCESS, UPDATE_USER_FAIL, UPDATE_USER_REQUEST, UPDATE_USER_SUCCESS, RESET_PASSWORD_USER_REQUEST, RESET_PASSWORD_USER_SUCCESS, RESET_PASSWORD_USER_FAIL } from \"./users.actions\";\nimport { createUser, deleteUser, fetchUser, fetchUsersFilteredByUsername, updateUser, resetPasswordUser } from \"./users.repo\";\nexport var getAllUsersData = state => state.usersReducer.allusersdata;\nexport var getState = state => state;\nexport function usersSagas() {\n  return _regeneratorRuntime.wrap(function usersSagas$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(GET_ALL_USERS_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee(action) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return call(fetchUsersFilteredByUsername, action.payload);\n\n                  case 3:\n                    res = _context.sent;\n                    _context.next = 6;\n                    return put({\n                      type: GET_ALL_USERS_SUCCESS,\n                      payload: res\n                    });\n\n                  case 6:\n                    _context.next = 13;\n                    break;\n\n                  case 8:\n                    _context.prev = 8;\n                    _context.t0 = _context[\"catch\"](0);\n                    console.error(_context.t0); //yield put(showNotification('error.error_nesto'));\n\n                    _context.next = 13;\n                    return put({\n                      type: GET_ALL_USERS_FAIL,\n                      payload: {\n                        message: _context.t0.message\n                      }\n                    });\n\n                  case 13:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[0, 8]]);\n          }));\n\n        case 2:\n          _context7.next = 4;\n          return takeEvery(GET_USER_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(action) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    put({\n                      type: CLEAR_USER_REQUEST,\n                      payload: undefined\n                    });\n                    _context2.prev = 1;\n                    _context2.next = 4;\n                    return call(fetchUser, action.payload);\n\n                  case 4:\n                    res = _context2.sent;\n                    _context2.next = 7;\n                    return put({\n                      type: GET_USER_SUCCESS,\n                      payload: res\n                    });\n\n                  case 7:\n                    _context2.next = 14;\n                    break;\n\n                  case 9:\n                    _context2.prev = 9;\n                    _context2.t0 = _context2[\"catch\"](1);\n                    console.error(_context2.t0); //yield put(showNotification('error.error_nesto'));\n\n                    _context2.next = 14;\n                    return put({\n                      type: GET_USER_FAIL,\n                      payload: {\n                        message: _context2.t0.message\n                      }\n                    });\n\n                  case 14:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, null, [[1, 9]]);\n          }));\n\n        case 4:\n          _context7.next = 6;\n          return takeEvery(CREATE_USER_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(action) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    put({\n                      type: CLEAR_USER_REQUEST,\n                      payload: undefined\n                    });\n                    _context3.prev = 1;\n                    _context3.next = 4;\n                    return call(createUser, action.payload);\n\n                  case 4:\n                    res = _context3.sent;\n                    _context3.next = 7;\n                    return put({\n                      type: CREATE_USER_SUCCESS,\n                      payload: res\n                    });\n\n                  case 7:\n                    _context3.next = 9;\n                    return put({\n                      type: GET_ALL_USERS_REQUEST,\n                      payload: {\n                        page: 0,\n                        size: 8,\n                        filter: \"\"\n                      }\n                    });\n\n                  case 9:\n                    _context3.next = 16;\n                    break;\n\n                  case 11:\n                    _context3.prev = 11;\n                    _context3.t0 = _context3[\"catch\"](1);\n                    console.error(_context3.t0); //yield put(showNotification('error.error_nesto'));\n\n                    _context3.next = 16;\n                    return put({\n                      type: CREATE_USER_FAIL,\n                      payload: {\n                        message: _context3.t0.message\n                      }\n                    });\n\n                  case 16:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3, null, [[1, 11]]);\n          }));\n\n        case 6:\n          _context7.next = 8;\n          return takeEvery(DELETE_USER_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(action) {\n            var res, allusersdata;\n            return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    put({\n                      type: CLEAR_USER_REQUEST,\n                      payload: undefined\n                    });\n                    _context4.prev = 1;\n                    _context4.next = 4;\n                    return call(deleteUser, action.payload);\n\n                  case 4:\n                    res = _context4.sent;\n                    _context4.next = 7;\n                    return put({\n                      type: DELETE_USER_SUCCESS,\n                      payload: res\n                    });\n\n                  case 7:\n                    _context4.next = 9;\n                    return select(getAllUsersData);\n\n                  case 9:\n                    allusersdata = _context4.sent;\n                    _context4.next = 12;\n                    return put({\n                      type: GET_ALL_USERS_REQUEST,\n                      payload: {\n                        page: 0,\n                        size: 8,\n                        filter: \"\"\n                      }\n                    });\n\n                  case 12:\n                    _context4.next = 19;\n                    break;\n\n                  case 14:\n                    _context4.prev = 14;\n                    _context4.t0 = _context4[\"catch\"](1);\n                    console.error(_context4.t0); //yield put(showNotification('error.error_nesto'));\n\n                    _context4.next = 19;\n                    return put({\n                      type: DELETE_USER_FAIL,\n                      payload: {\n                        message: _context4.t0.message\n                      }\n                    });\n\n                  case 19:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4, null, [[1, 14]]);\n          }));\n\n        case 8:\n          _context7.next = 10;\n          return takeEvery(UPDATE_USER_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(action) {\n            var res, allusersdata;\n            return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    put({\n                      type: CLEAR_USER_REQUEST,\n                      payload: undefined\n                    });\n                    _context5.prev = 1;\n                    _context5.next = 4;\n                    return call(updateUser, action.payload);\n\n                  case 4:\n                    res = _context5.sent;\n                    _context5.next = 7;\n                    return put({\n                      type: UPDATE_USER_SUCCESS,\n                      payload: res\n                    });\n\n                  case 7:\n                    _context5.next = 9;\n                    return select(getAllUsersData);\n\n                  case 9:\n                    allusersdata = _context5.sent;\n                    _context5.next = 12;\n                    return put({\n                      type: GET_ALL_USERS_REQUEST,\n                      payload: {\n                        page: 0,\n                        size: 8,\n                        filter: \"\"\n                      }\n                    });\n\n                  case 12:\n                    _context5.next = 19;\n                    break;\n\n                  case 14:\n                    _context5.prev = 14;\n                    _context5.t0 = _context5[\"catch\"](1);\n                    console.error(_context5.t0); //yield put(showNotification('error.error_nesto'));\n\n                    _context5.next = 19;\n                    return put({\n                      type: UPDATE_USER_FAIL,\n                      payload: {\n                        message: _context5.t0.message\n                      }\n                    });\n\n                  case 19:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5, null, [[1, 14]]);\n          }));\n\n        case 10:\n          _context7.next = 12;\n          return takeEvery(RESET_PASSWORD_USER_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(action) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    put({\n                      type: CLEAR_USER_REQUEST,\n                      payload: undefined\n                    });\n                    _context6.prev = 1;\n                    _context6.next = 4;\n                    return call(resetPasswordUser, action.payload);\n\n                  case 4:\n                    res = _context6.sent;\n                    _context6.next = 7;\n                    return put({\n                      type: RESET_PASSWORD_USER_SUCCESS,\n                      payload: res\n                    });\n\n                  case 7:\n                    _context6.next = 14;\n                    break;\n\n                  case 9:\n                    _context6.prev = 9;\n                    _context6.t0 = _context6[\"catch\"](1);\n                    console.error(_context6.t0);\n                    _context6.next = 14;\n                    return put({\n                      type: RESET_PASSWORD_USER_FAIL,\n                      payload: {\n                        message: _context6.t0.message\n                      }\n                    });\n\n                  case 14:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, _callee6, null, [[1, 9]]);\n          }));\n\n        case 12:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:/Users/Dell/Desktop/JovanaFiles/UniVienna/WinterSemester2020/PRAKTIKUM/tagamafront/Tagama-front/src/app/module/users/users.saga.js"],"names":["usersSagas","call","put","select","takeEvery","CLEAR_USER_REQUEST","CREATE_USER_FAIL","CREATE_USER_REQUEST","CREATE_USER_SUCCESS","DELETE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","GET_ALL_USERS_FAIL","GET_ALL_USERS_REQUEST","GET_ALL_USERS_SUCCESS","GET_USER_FAIL","GET_USER_REQUEST","GET_USER_SUCCESS","UPDATE_USER_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","RESET_PASSWORD_USER_REQUEST","RESET_PASSWORD_USER_SUCCESS","RESET_PASSWORD_USER_FAIL","createUser","deleteUser","fetchUser","fetchUsersFilteredByUsername","updateUser","resetPasswordUser","getAllUsersData","state","usersReducer","allusersdata","getState","action","payload","res","type","console","error","message","undefined","page","size","filter"],"mappings":";;oDA4BiBA,U;;AA5BjB,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA2C,oBAA3C;AACA,SACIC,kBADJ,EAEIC,gBAFJ,EAGIC,mBAHJ,EAIIC,mBAJJ,EAKIC,gBALJ,EAMIC,mBANJ,EAOIC,mBAPJ,EAQIC,kBARJ,EASIC,qBATJ,EAUIC,qBAVJ,EAWIC,aAXJ,EAYIC,gBAZJ,EAaIC,gBAbJ,EAcIC,gBAdJ,EAeIC,mBAfJ,EAgBIC,mBAhBJ,EAiBIC,2BAjBJ,EAkBIC,2BAlBJ,EAmBIC,wBAnBJ,QAoBO,iBApBP;AAqBA,SAAQC,UAAR,EAAoBC,UAApB,EAAgCC,SAAhC,EAA2CC,4BAA3C,EAAyEC,UAAzE,EAAqFC,iBAArF,QAA6G,cAA7G;AAEA,OAAO,IAAMC,eAAe,GAAGC,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBC,YAApD;AACP,OAAO,IAAMC,QAAQ,GAAGH,KAAK,IAAIA,KAA1B;AAGP,OAAO,SAAU/B,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAMI,SAAS,CAACS,qBAAD,wCAAwB,iBAAWsB,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnB,2BAAMlC,IAAI,CAAC0B,4BAAD,EAA8BQ,MAAM,CAACC,OAArC,CAAV;;AAFmB;AAEzBC,oBAAAA,GAFyB;AAAA;AAG/B,2BAAMnC,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAExB,qBAAP;AAA8BsB,sBAAAA,OAAO,EAAEC;AAAvC,qBAAD,CAAT;;AAH+B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAM/BE,oBAAAA,OAAO,CAACC,KAAR,cAN+B,CAO/B;;AAP+B;AAQ/B,2BAAMtC,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAE1B,kBAAP;AAA2BwB,sBAAAA,OAAO,EAAE;AAACK,wBAAAA,OAAO,EAAE,YAAEA;AAAZ;AAApC,qBAAD,CAAT;;AAR+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAxB,EAAf;;AAFG;AAAA;AAcH,iBAAMrC,SAAS,CAACY,gBAAD,wCAAmB,kBAAUmB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9BjC,oBAAAA,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAEjC,kBAAP;AAA2B+B,sBAAAA,OAAO,EAAEM;AAApC,qBAAD,CAAH;AAD8B;AAAA;AAId,2BAAMzC,IAAI,CAACyB,SAAD,EAAWS,MAAM,CAACC,OAAlB,CAAV;;AAJc;AAIpBC,oBAAAA,GAJoB;AAAA;AAK1B,2BAAMnC,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAErB,gBAAP;AAAyBmB,sBAAAA,OAAO,EAAEC;AAAlC,qBAAD,CAAT;;AAL0B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQ1BE,oBAAAA,OAAO,CAACC,KAAR,eAR0B,CAS1B;;AAT0B;AAU1B,2BAAMtC,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAEvB,aAAP;AAAsBqB,sBAAAA,OAAO,EAAE;AAACK,wBAAAA,OAAO,EAAE,aAAEA;AAAZ;AAA/B,qBAAD,CAAT;;AAV0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAnB,EAAf;;AAdG;AAAA;AA6BH,iBAAMrC,SAAS,CAACG,mBAAD,wCAAsB,kBAAU4B,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACjCjC,oBAAAA,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAEjC,kBAAP;AAA2B+B,sBAAAA,OAAO,EAAEM;AAApC,qBAAD,CAAH;AADiC;AAAA;AAIjB,2BAAMzC,IAAI,CAACuB,UAAD,EAAaW,MAAM,CAACC,OAApB,CAAV;;AAJiB;AAIvBC,oBAAAA,GAJuB;AAAA;AAK7B,2BAAMnC,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAE9B,mBAAP;AAA4B4B,sBAAAA,OAAO,EAAEC;AAArC,qBAAD,CAAT;;AAL6B;AAAA;AAM7B,2BAAMnC,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAEzB,qBAAP;AAA8BuB,sBAAAA,OAAO,EAAE;AAACO,wBAAAA,IAAI,EAAE,CAAP;AAAUC,wBAAAA,IAAI,EAAE,CAAhB;AAAmBC,wBAAAA,MAAM,EAAE;AAA3B;AAAvC,qBAAD,CAAT;;AAN6B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAS7BN,oBAAAA,OAAO,CAACC,KAAR,eAT6B,CAU7B;;AAV6B;AAW7B,2BAAMtC,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAEhC,gBAAP;AAAyB8B,sBAAAA,OAAO,EAAE;AAACK,wBAAAA,OAAO,EAAE,aAAEA;AAAZ;AAAlC,qBAAD,CAAT;;AAX6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAtB,EAAf;;AA7BG;AAAA;AA4CH,iBAAMrC,SAAS,CAACM,mBAAD,wCAAsB,kBAAUyB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACjCjC,oBAAAA,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAEjC,kBAAP;AAA2B+B,sBAAAA,OAAO,EAAEM;AAApC,qBAAD,CAAH;AADiC;AAAA;AAIjB,2BAAMzC,IAAI,CAACwB,UAAD,EAAaU,MAAM,CAACC,OAApB,CAAV;;AAJiB;AAIvBC,oBAAAA,GAJuB;AAAA;AAK7B,2BAAMnC,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAE3B,mBAAP;AAA4ByB,sBAAAA,OAAO,EAAEC;AAArC,qBAAD,CAAT;;AAL6B;AAAA;AAMV,2BAAMlC,MAAM,CAAC2B,eAAD,CAAZ;;AANU;AAMzBG,oBAAAA,YANyB;AAAA;AAQ7B,2BAAM/B,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAEzB,qBAAP;AAA8BuB,sBAAAA,OAAO,EAAE;AAACO,wBAAAA,IAAI,EAAE,CAAP;AAAUC,wBAAAA,IAAI,EAAE,CAAhB;AAAkBC,wBAAAA,MAAM,EAAE;AAA1B;AAAvC,qBAAD,CAAT;;AAR6B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAW7BN,oBAAAA,OAAO,CAACC,KAAR,eAX6B,CAY7B;;AAZ6B;AAa7B,2BAAMtC,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAE7B,gBAAP;AAAyB2B,sBAAAA,OAAO,EAAE;AAACK,wBAAAA,OAAO,EAAE,aAAEA;AAAZ;AAAlC,qBAAD,CAAT;;AAb6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAtB,EAAf;;AA5CG;AAAA;AA6DH,iBAAMrC,SAAS,CAACe,mBAAD,wCAAsB,kBAAUgB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACjCjC,oBAAAA,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAEjC,kBAAP;AAA2B+B,sBAAAA,OAAO,EAAEM;AAApC,qBAAD,CAAH;AADiC;AAAA;AAKjB,2BAAMzC,IAAI,CAAC2B,UAAD,EAAaO,MAAM,CAACC,OAApB,CAAV;;AALiB;AAKvBC,oBAAAA,GALuB;AAAA;AAM7B,2BAAMnC,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAElB,mBAAP;AAA4BgB,sBAAAA,OAAO,EAAEC;AAArC,qBAAD,CAAT;;AAN6B;AAAA;AAOV,2BAAMlC,MAAM,CAAC2B,eAAD,CAAZ;;AAPU;AAOzBG,oBAAAA,YAPyB;AAAA;AAQ7B,2BAAM/B,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAEzB,qBAAP;AAA8BuB,sBAAAA,OAAO,EAAE;AAACO,wBAAAA,IAAI,EAAE,CAAP;AAAUC,wBAAAA,IAAI,EAAE,CAAhB;AAAkBC,wBAAAA,MAAM,EAAE;AAA1B;AAAvC,qBAAD,CAAT;;AAR6B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAW7BN,oBAAAA,OAAO,CAACC,KAAR,eAX6B,CAY7B;;AAZ6B;AAa7B,2BAAMtC,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAEpB,gBAAP;AAAyBkB,sBAAAA,OAAO,EAAE;AAACK,wBAAAA,OAAO,EAAE,aAAEA;AAAZ;AAAlC,qBAAD,CAAT;;AAb6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAtB,EAAf;;AA7DG;AAAA;AA8EH,iBAAMrC,SAAS,CAACiB,2BAAD,wCAA8B,kBAAUc,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACzCjC,oBAAAA,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAEjC,kBAAP;AAA2B+B,sBAAAA,OAAO,EAAEM;AAApC,qBAAD,CAAH;AADyC;AAAA;AAKzB,2BAAMzC,IAAI,CAAC4B,iBAAD,EAAoBM,MAAM,CAACC,OAA3B,CAAV;;AALyB;AAK/BC,oBAAAA,GAL+B;AAAA;AAMrC,2BAAMnC,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAEhB,2BAAP;AAAoCc,sBAAAA,OAAO,EAAEC;AAA7C,qBAAD,CAAT;;AANqC;AAAA;AAAA;;AAAA;AAAA;AAAA;AASrCE,oBAAAA,OAAO,CAACC,KAAR;AATqC;AAUrC,2BAAMtC,GAAG,CAAC;AAACoC,sBAAAA,IAAI,EAAEf,wBAAP;AAAiCa,sBAAAA,OAAO,EAAE;AAACK,wBAAAA,OAAO,EAAE,aAAEA;AAAZ;AAA1C,qBAAD,CAAT;;AAVqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA9B,EAAf;;AA9EG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {call, put, select, takeEvery} from 'redux-saga/effects';\r\nimport {\r\n    CLEAR_USER_REQUEST,\r\n    CREATE_USER_FAIL,\r\n    CREATE_USER_REQUEST,\r\n    CREATE_USER_SUCCESS,\r\n    DELETE_USER_FAIL,\r\n    DELETE_USER_REQUEST,\r\n    DELETE_USER_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n    GET_ALL_USERS_REQUEST,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_USER_FAIL,\r\n    GET_USER_REQUEST,\r\n    GET_USER_SUCCESS,\r\n    UPDATE_USER_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    RESET_PASSWORD_USER_REQUEST,\r\n    RESET_PASSWORD_USER_SUCCESS,\r\n    RESET_PASSWORD_USER_FAIL\r\n} from \"./users.actions\";\r\nimport {createUser, deleteUser, fetchUser, fetchUsersFilteredByUsername, updateUser, resetPasswordUser} from \"./users.repo\";\r\n\r\nexport const getAllUsersData = state => state.usersReducer.allusersdata;\r\nexport const getState = state => state;\r\n\r\n\r\nexport function* usersSagas () {\r\n    \r\n    yield takeEvery(GET_ALL_USERS_REQUEST, function* (action) {\r\n        try {\r\n            const res = yield call(fetchUsersFilteredByUsername,action.payload);\r\n            yield put({type: GET_ALL_USERS_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: GET_ALL_USERS_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    yield takeEvery(GET_USER_REQUEST, function*(action){\r\n        put({type: CLEAR_USER_REQUEST, payload: undefined});\r\n\r\n        try {\r\n            const res = yield call(fetchUser,action.payload);\r\n            yield put({type: GET_USER_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: GET_USER_FAIL, payload: {message: e.message}});\r\n        }\r\n\r\n    });\r\n\r\n    yield takeEvery(CREATE_USER_REQUEST, function*(action){\r\n        put({type: CLEAR_USER_REQUEST, payload: undefined});\r\n\r\n        try {\r\n            const res = yield call(createUser, action.payload);\r\n            yield put({type: CREATE_USER_SUCCESS, payload: res});\r\n            yield put({type: GET_ALL_USERS_REQUEST, payload: {page: 0, size: 8, filter: \"\"}});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: CREATE_USER_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    yield takeEvery(DELETE_USER_REQUEST, function*(action){\r\n        put({type: CLEAR_USER_REQUEST, payload: undefined});\r\n\r\n        try {\r\n            const res = yield call(deleteUser, action.payload);\r\n            yield put({type: DELETE_USER_SUCCESS, payload: res});\r\n            let allusersdata = yield select(getAllUsersData);\r\n\r\n            yield put({type: GET_ALL_USERS_REQUEST, payload: {page: 0, size: 8,filter: \"\"}});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: DELETE_USER_FAIL, payload: {message: e.message}});\r\n        }\r\n    }); \r\n\r\n    yield takeEvery(UPDATE_USER_REQUEST, function*(action){\r\n        put({type: CLEAR_USER_REQUEST, payload: undefined});\r\n\r\n\r\n        try {\r\n            const res = yield call(updateUser, action.payload);\r\n            yield put({type: UPDATE_USER_SUCCESS, payload: res});\r\n            let allusersdata = yield select(getAllUsersData);\r\n            yield put({type: GET_ALL_USERS_REQUEST, payload: {page: 0, size: 8,filter: \"\"}});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: UPDATE_USER_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    yield takeEvery(RESET_PASSWORD_USER_REQUEST, function*(action){\r\n        put({type: CLEAR_USER_REQUEST, payload: undefined});\r\n\r\n\r\n        try {\r\n            const res = yield call(resetPasswordUser, action.payload);\r\n            yield put({type: RESET_PASSWORD_USER_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            yield put({type: RESET_PASSWORD_USER_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}