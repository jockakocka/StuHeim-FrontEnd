{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\JovanaFiles\\\\UniVienna\\\\WinterSemester2020\\\\PRAKTIKUM\\\\tagamafront\\\\Tagama-front\\\\src\\\\app\\\\module\\\\groups\\\\update.groups\\\\update.groups.container.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { clearGroup, fetchGroup, resetRedirect, updateGroup } from '../groups.actions';\nimport { Group } from '../../../model/group.model';\nimport { Link, Redirect } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nexport class UpdateGroupContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      singlegroup: new Group({\n        type: ''\n      }),\n      redirectBack: false\n    };\n\n    this.redirectBack = () => {\n      this.props.resetRedirect();\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/app/groups\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 18\n        }\n      });\n    };\n\n    this.handleGroupFormChange = name => event => {\n      var group = this.state.singlegroup;\n      group[name] = event.target.value;\n      this.setState({\n        singlegroup: group\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.props.updateGroup(this.state.singlegroup);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchGroup(this.props.match.params.id);\n  }\n\n  componentDidUpdate() {}\n\n  componentWillUnmount() {\n    this.props.clearGroup();\n  }\n\n  render() {\n    if (this.props.singlegroup != -1 && this.props.singlegroup !== undefined && (this.state.singlegroup === undefined || this.state.singlegroup.id === undefined) && this.props.singlegroup != this.state.singlegroup) {\n      var group = this.props.singlegroup;\n      this.setState({\n        singlegroup: group\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      open: true,\n      fullWidth: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"simple-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Update group \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 64\n      }\n    }, this.props.singlegroup ? this.props.singlegroup.name : '')), this.props.loading == true ? /*#__PURE__*/React.createElement(LinearProgress, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 44\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 5 + 'px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 83\n      }\n    }), this.state.singlegroup !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      maxWidth: \"md\",\n      className: \"dialog-form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"id\",\n      label: \"(ID)\",\n      onChange: this.handleGroupFormChange('id'),\n      fullWidth: true,\n      value: this.state.singlegroup.id ? this.state.singlegroup.id : '',\n      margin: \"normal\",\n      InputProps: {\n        disabled: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"name\",\n      label: \"Name\",\n      onChange: this.handleGroupFormChange('name'),\n      fullWidth: true,\n      value: this.state.singlegroup.name ? this.state.singlegroup.name : '',\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/app/groups\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, \"Cancel\")), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleSubmit(),\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, \"UPDATE\")))) : '', this.props.redirectBack ? this.redirectBack() : ''));\n  }\n\n}\n\nvar mapStateToProps = state => {\n  return {\n    singlegroup: state.groupsReducer.singlegroup,\n    redirectBack: state.groupsReducer.redirectBack,\n    loading: state.groupsReducer.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchGroup,\n  clearGroup,\n  updateGroup,\n  resetRedirect\n})(UpdateGroupContainer);","map":{"version":3,"sources":["C:/Users/Dell/Desktop/JovanaFiles/UniVienna/WinterSemester2020/PRAKTIKUM/tagamafront/Tagama-front/src/app/module/groups/update.groups/update.groups.container.js"],"names":["React","connect","DialogTitle","Dialog","clearGroup","fetchGroup","resetRedirect","updateGroup","Group","Link","Redirect","TextField","Button","DialogActions","LinearProgress","UpdateGroupContainer","Component","state","singlegroup","type","redirectBack","props","handleGroupFormChange","name","event","group","target","value","setState","handleSubmit","componentDidMount","match","params","id","componentDidUpdate","componentWillUnmount","render","undefined","loading","height","disabled","mapStateToProps","groupsReducer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {clearGroup, fetchGroup, resetRedirect, updateGroup} from '../groups.actions';\r\nimport {Group} from '../../../model/group.model';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nexport class UpdateGroupContainer extends React.Component{\r\n\r\n    state = {\r\n        singlegroup: new Group({type: ''}),\r\n        redirectBack: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchGroup(this.props.match.params.id);\r\n    }\r\n    \r\n    componentDidUpdate(){\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.clearGroup();\r\n    }\r\n\r\n    redirectBack = () => {\r\n        this.props.resetRedirect();\r\n          return <Redirect to='/app/groups' />\r\n    }\r\n\r\n\r\n    handleGroupFormChange = name => event => {\r\n\r\n        let group = this.state.singlegroup;\r\n        group[name] = event.target.value;\r\n        this.setState({\r\n            singlegroup: group\r\n        });\r\n\r\n    };\r\n\r\n\r\n     handleSubmit = () => {\r\n\r\n\r\n         this.props.updateGroup(this.state.singlegroup);\r\n    };\r\n    render() {\r\n\r\n        if((this.props.singlegroup != -1 && this.props.singlegroup !== undefined) && (this.state.singlegroup === undefined || this.state.singlegroup.id === undefined) && (this.props.singlegroup != this.state.singlegroup)){\r\n\r\n            let group = this.props.singlegroup;\r\n            this.setState({\r\n                singlegroup: group\r\n            });\r\n\r\n        }\r\n        return (\r\n            <div>\r\n            <Dialog open={true} fullWidth={true} maxWidth=\"md\"  aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogTitle id=\"simple-dialog-title\">Update group <strong>{this.props.singlegroup ? this.props.singlegroup.name : ''}</strong></DialogTitle>\r\n            { this.props.loading == true ? <LinearProgress color=\"secondary\" /> : <div style={{height: 5 + 'px'}}></div>}\r\n\r\n            { this.state.singlegroup !== undefined ? \r\n\r\n\r\n                <div>\r\n                    <form noValidate autoComplete=\"off\" maxWidth=\"md\" className=\"dialog-form-container\" >\r\n                        <TextField\r\n                        id=\"id\"\r\n                        label=\"(ID)\"\r\n                        onChange={this.handleGroupFormChange('id')}\r\n                        fullWidth={true}\r\n                        value={this.state.singlegroup.id ? this.state.singlegroup.id : ''}\r\n                        margin=\"normal\"\r\n                        InputProps={{\r\n                            disabled: true,\r\n                        }}\r\n                        />\r\n                        <TextField\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        onChange={this.handleGroupFormChange('name')}\r\n                        fullWidth={true}\r\n                        value={this.state.singlegroup.name ? this.state.singlegroup.name : ''}\r\n                        margin=\"normal\"\r\n                        />\r\n                        <DialogActions>\r\n                            <Link to=\"/app/groups\">\r\n                                <Button color=\"primary\">\r\n                                Cancel\r\n                                </Button>\r\n                                </Link>\r\n                            <Button onClick={() => this.handleSubmit()} color=\"primary\" variant=\"contained\">\r\n                            UPDATE\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </div>\r\n                \r\n                : ''} \r\n                {this.props.redirectBack ? this.redirectBack() : ''}\r\n          </Dialog>\r\n          </div>\r\n        );\r\n      }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        singlegroup: state.groupsReducer.singlegroup,\r\n        redirectBack: state.groupsReducer.redirectBack,\r\n        loading: state.groupsReducer.loading\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    fetchGroup, clearGroup, updateGroup, resetRedirect\r\n}))(UpdateGroupContainer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}